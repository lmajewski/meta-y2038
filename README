This README file contains information on the contents of the meta-y2038 layer.

Please see the corresponding sections below for details.

Dependencies
============

	meta-openembedded:

Patches
=======

Please submit any patches against the meta-y2038 layer to github.com/lmajewski
repo for this project and cc: the maintainer:

Maintainer: Lukasz Majewski <lukma@denx.de>

Table of Contents
=================

  I. Adding the meta-y2038 layer to your build
 II. Build setup (meta-* SHAs)
III. Y2038 development
IV.  Using glibc/src/scripts/cross-test-ssh.sh
V.   Building glibc with yocto SDK
VI.  Build test glibc with x86, x86-64 and x32

I. Adding the meta-y2038 layer to your build
=================================================

Run 'bitbake-layers add-layer meta-y2038'

II. Build setup
===============

The KAS project [https://github.com/siemens/kas] shall be used to deploy the
meta-y2038 with proper SHAs. Please use the "pasted" below meta-y2038-kas.yml
file.

or one can do it manually.

Build Configuration:
BB_VERSION           = "1.40.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "y2038arm"
DISTRO               = "poky"
DISTRO_VERSION       = "2.6.1"
TUNE_FEATURES        = "arm armv7a vfp thumb neon callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp       = "thud:ee7dd3194411695e659c0c5cfbe2d938764dcc78"
meta-oe
meta-networking
meta-python
meta-filesystems
meta-perl            = "thud:cca27b5ea7569d2730ee5da7ee7f47b39d775d89"

(Please pay attention to thud:SHAs)

III. Y2038 development
======================

bitbake y2038-image-devel && runqemu -d y2038-image-devel

Then from prompt:
root@y2038arm:~# test_y2038

Available MACHINES: y2038arm, qemux86, qemux86_64


IV. Using glibc/src/scripts/cross-test-ssh.sh with QEMU
=======================================================

MACHINE=y2038arm   (32 bit ARM - Vexpress-A9)

From Yocto/OE setup environment (on which bitbake operates)
-----------------------------------------------------------
runqemu -d y2038arm nographic
mkdir -p /opt/Y2038/glibc/; cd /opt/Y2038/glibc/
sshfs -o allow_other -o sshfs_sync lukma@192.168.7.1:/opt/Y2038/glibc .   [1]
cd .

On HOST (x86_64):
-----------------

Setup yocto environment:
$ . /opt/Y2038/2.6.1/environment-setup-armv7at2hf-neon-poky-linux-gnueabi

cd /opt/Y2038/glibc/
../src/configure --host="arm-poky-linux-gnueabi" --prefix=/usr

make PARALLELMFLAGS="-j8"
(For improved performance execute step [1] just before xcheck)
make PARALLELMFLAGS="-j8" test-wrapper='/opt/Y2038/glibc/src/scripts/cross-test-ssh.sh root@192.168.7.2' xcheck

V. Building glibc with yocto SDK
================================
cd build/glibc
../../y2038-glibc/configure --host="i586-poky-linux" --prefix=/usr
make PARALLELMFLAGS="-j12" && make xcheck PARALLELMFLAGS="-j12"


VI. Build test glibc with MACHINE=qemux86-64, qemux86, qemux86-64-x32
=====================================================================
MACHINE=qemux86-64-x32 bitbake y2038-glibc -c cleansstate && MACHINE=qemux86-64-x32 bitbake y2038-glibc -c compile -f
MACHINE=qemux86-64 bitbake y2038-glibc -c cleansstate && MACHINE=qemux86-64 bitbake y2038-glibc -c compile -f
MACHINE=qemux86 bitbake y2038-glibc -c cleansstate && MACHINE=qemux86 bitbake y2038-glibc -c compile -f

Appendix I.
===========

meta-y2038-kas.yml

----->8-------
header:
  version: 1

machine: "y2038arm"

distro: "y2038"
target: "arm-poky-linux-gnueabi"
repos:

  poky:
      url: "git://git.yoctoproject.org/poky.git"
      refspec : ee7dd3194411695e659c0c5cfbe2d938764dcc78
      layers:
      meta:
      meta-poky:
      meta-yocto-bsp:

  meta-openembedded:
      url : "git://git.openembedded.org/meta-openembedded"
      refspec : cca27b5ea7569d2730ee5da7ee7f47b39d775d89
      layers:
      meta-oe:
      meta-networking:
      meta-python:
      meta-webserver:
      meta-perl:

  meta-y2038 :
      url : "https://github.com/lmajewski/meta-y2038.git"
      refspec : bd8cd0fc9d805a563ab7d73dbb0c274e878a7812
-----8<-------